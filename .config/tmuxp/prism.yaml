session_name: PRISM - ${NB_HW}
windows:
- window_name: dev-branch
  layout: tiled
  shell_command_before:
  - alias fixdisplay="eval export $(tmux show-env | grep ^DISPLAY)"
  - fixdisplay
  - clear
  - export OE_BELDEN_OS='${DIR_PRISM_YOCTO}/dev-scarthgap-oe'
  panes:
  - shell_command:
    - export BITBAKE_PANE=bitbake
    - conda activate bitbake-builds
    - cd ${OE_BELDEN_OS}
    - . ./wrappers/wrapper_${NB_HW}.sh
    - export NB_ROOTFS_IMG_PATH=${OE_BELDEN_OS}/build/tmp/deploy/images/${MACHINE}/
    - ds
    - clear
  - shell_command:
    - sleep 2
    - export BUILD_DIR="${OE_BELDEN_OS}/build"
    - cd $BUILD_DIR
    - clear
  - shell_command:
    - export BITBAKE_PANE=bitbake
    - conda activate bitbake-builds
    - cd ${OE_BELDEN_OS}
    - . ./wrappers/wrapper_${NB_HW}.sh
    - export NB_ROOTFS_IMG_PATH=${OE_BELDEN_OS}/build/tmp/deploy/images/${MACHINE}/
    - ds
    - clear
  - shell_command:
    - clear
    - cd ${OE_BELDEN_OS}/
    - clear
- window_name: prism-layers
  layout: tiled
  shell_command_before:
  - clear
  - export OE_BELDEN_OS='${DIR_PRISM_YOCTO}/dev-scarthgap-oe'
  panes:
  - cd ${OE_BELDEN_OS}/layers/meta-bil/ && clear
  - cd ${OE_BELDEN_OS}/layers/coreos/ && clear
  - cd ${OE_BELDEN_OS}/layers/meta-netmodule-wlan/ && clear
  - cd ${OE_BELDEN_OS}/layers/ && clear
- window_name: stable-branch
  layout: tiled
  shell_command_before:
  - clear
  - export OE_BELDEN_OS='${DIR_PRISM_YOCTO}/scarthgap-oe'
  panes:
  - shell_command:
    - export BITBAKE_PANE=bitbake
    - conda activate bitbake-builds
    - cd ${OE_BELDEN_OS}
    - . ./wrappers/wrapper_${NB_HW}.sh
    - export NB_ROOTFS_IMG_PATH=${OE_BELDEN_OS}/build/tmp/deploy/images/${MACHINE}/
    - ds
    - clear
  - shell_command:
    - sleep 2
    - export BUILD_DIR="${OE_BELDEN_OS}/build"
    - cd $BUILD_DIR
    - clear
  - shell_command:
    - clear
    - cd ${OE_BELDEN_OS}/
    - clear
  - shell_command:
    - clear
    - cd ${OE_BELDEN_OS}/
    - clear
- window_name: coreos
  layout: tiled
  shell_command_before:
  - clear
  - export OE_COREOS='${DIR_PRISM_YOCTO}/coreos/'
  panes:
  - shell_command:
    - export BITBAKE_PANE=bitbake
    - conda activate bitbake-builds
    - cd ${OE_COREOS}
    - . ./coreos-init-build-env
    - ds
    - clear
  - shell_command:
    - sleep 2
    - export BUILD_DIR="${OE_COREOS}/build"
    - cd $BUILD_DIR
    - clear
  - shell_command:
    - export BITBAKE_PANE=bitbake
    - conda activate bitbake-builds
    - cd ${OE_COREOS}
    - . ./coreos-init-build-env
    - ds
    - clear
  - shell_command:
    - clear
    - cd ${OE_COREOS}/
    - clear
- window_name: upenv
  layout: tiled
  shell_command_before:
  - export UP_ENV="${DIR_PRISM}/upenvironment"
  - cd "${UP_ENV}"
  panes:
  - shell_command:
    - export PATH="${PATH}:${DIR_PRISM}/tools/yang-documentation/tools/"
    - conda activate bitbake-builds
    - clear
  - shell_command:
    - export PATH="${PATH}:${DIR_PRISM}/tools/yang-documentation/tools/"
    - conda activate bitbake-builds
    - clear
  - shell_command:
    - sleep 4
    - devcontainer exec --workspace-folder . bash
    - cd /usr/local/log && clear
  - shell_command:
    - ./dc
    - ./up run
- window_name: serial-console
  shell_command:
  - clear
